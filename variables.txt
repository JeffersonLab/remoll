The output trees are organized into several indepdent arrays

ev.*   - generated event info
part.* - initial particles
bm.*   - beam information
hit.*  - detector hits
sum.*  - detector sums
units.* - stored units

rate		Weighting variable to give event rate [Hz]

generated event data - single variable:
ev.A		Process asymmetry [ppb]
ev.Am		Measured asymmetry (scaled by polarization) [ppb]
ev.xs		Process cross section [ub]
ev.Q2		Q2 [MeV^2]  (not available for all processes)
ev.W2		Invariant mass squared [MeV^2] (not available for all processes)
ev.thcom	theta center-of-mass [rad] (not available for all processes)
ev.beamp	Beam momentum magnitude at vertex [MeV]

initial particle data - array variables:
part.pid	Geant4 particle type
part.v[xyz]	Creation vertex, lab frame [mm]
part.p		Particle initial momentum [MeV]
part.p[xyz]	Particle initial momentum components, lab frame [MeV]
part.s[xyz]	Particle initial polarization components, lab frame [1]
part.th		Particle initial polar angle [rad]
part.ph		Particle initial azimuthal angle [rad]
part.tp[xyz]	Particle "true" momentum (if no multiple scattering effects)
part.tj[xyz]  Particle trajectories [mm]

beam data - single variable:
bm.[xyz]	Beam interaction vertex, lab frame [mm]
bm.d[xyz]	Beam interaction direction, lab frame [rad]

hit data - array variable:
hit.det		Detector number
hit.vid		Volume ID number (not yet implemented)
hit.pid		Geant4 particle type
hit.trid	Geant4 track ID number (1 = first particle created)
hit.mtrid	Geant4 mother track ID number (0 = particle from gun)
hit.gen		Generator (not yet implemented)

hit.[xyz]	Hit coordinate, lab frame [mm]
hit.[xyz]l	Hit coordinate, local solid frame [mm]
hit.r		Hit radial coordinate, lab frame [mm]
hit.p		Momentum magnitude of particle [MeV]
hit.p[xyz]	Momentum components of particle, lab frame [MeV]
hit.s[xyz]	Polarization components of particle, lab frame [1]
hit.v[xyz]	Creation vertex of particles [mm]
hit.e		Energy of particle [MeV]
hit.m		Mass of particle [MeV]
hit.edep	Energy deposited in hit [MeV]

sum data - array variable:
sum.det		Detector number
sum.vid		Volume ID number (not yet implemented)
sum.edep	Total energy deposited in detector [MeV]


Hint: if you wish to plot tree variables not in their stored units, use the
units tree to renormalize them:
  T->Draw("hit.pz/GeV:hit.z/m")
This will plot momentum in GeV versus position in meters (and even label the
axes accordingly).
